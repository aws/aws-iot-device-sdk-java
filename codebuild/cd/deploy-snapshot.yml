version: 0.2
#this buildspec assumes the ubuntu 14.04 openjdk-8 image
# This job is responsible for artifacting the JAR which will have all of the other shared libs stuffed
# into it once all platforms are built and artifacted
phases:
  install:
    commands:
      - sudo add-apt-repository ppa:openjdk-r/ppa
      - sudo apt-get update -y
      - sudo apt-get install openjdk-8-jdk-headless maven -y -f
      - sudo apt-get install jq -y
      # need latest awscli for secretsmanager
      - sudo pip3 install awscli --upgrade

  pre_build:
    commands:
      - cd $CODEBUILD_SRC_DIR/aws-iot-device-sdk-java
      # - export PKG_VERSION=$(git describe --tags | cut -f2 -dv)
      - export PKG_VERSION=0.0.1
      # install settings.xml to ~/.m2/settings.xml
      - mkdir -p $HOME/.m2
      - aws s3 cp s3://code-sharing-aws-crt/iot-sdk-java-v1.settings.xml $HOME/.m2/settings.xml
      - export SECRET_STRING=$(aws --query "SecretString" secretsmanager get-secret-value --secret-id Sonatype/JIRA/Password/V1)
      - export ST_PASSWORD=$(jq -r '.username' <<< ${SECRET_STRING})
      - export ST_USERNAME=$(jq -r '.password' <<< ${SECRET_STRING})
      - export GPG_SECRET_STRING=$(aws --query "SecretString" secretsmanager get-secret-value --secret-id gpg/IoT/JAVA/V1)
      - export GPG_PRINCIPAL=$(jq -r '.username' <<< ${GPG_SECRET_STRING})
      - export GPG_CREDENTIAL=$(jq -r '.password' <<< ${GPG_SECRET_STRING})
      # Use the password from secret manager to update the settings
      - sed -i 's/sonatype_Principal/'"$ST_USERNAME"'/g' $HOME/.m2/settings.xml
      - sed -i 's/sonatype_Credential/'"$ST_PASSWORD"'/g' $HOME/.m2/settings.xml
      - sed -i 's/gpg_Principal/'"$GPG_PRINCIPAL"'/g' $HOME/.m2/settings.xml
      - sed -i 's/gpg_Credential/'"$GPG_CREDENTIAL"'/g' $HOME/.m2/settings.xml
      # import gpg key
      - export GPG_PASSPHRASE=$(aws --query "SecretString" secretsmanager get-secret-value --secret-id aws-sdk-common-runtime.key.asc/password | cut -f2 -d":" | sed -e 's/[\\\"\}]//g')
  build:
    commands:
      - cd $CODEBUILD_SRC_DIR/aws-iot-device-sdk-java/aws-iot-device-sdk-java
      # update the version to match the git tag, make a snapshot version we can test
      - mvn -B versions:set -DnewVersion=${PKG_VERSION}-SNAPSHOT
      # do a full build/deploy, but skip tests, since the shared libs were artifacts above
      - mvn -B deploy -Prelease -Dmaven.test.skip=true -Dgpg.passphrase=$GPG_PASSPHRASE
      # update the version to match the git tag, make a staging release which we will release once snapshot testing passes
      - mvn -B versions:set -DnewVersion=${PKG_VERSION}
      - mvn -B deploy -Prelease -Dmaven.test.skip=true -Dgpg.passphrase=$GPG_PASSPHRASE | tee /tmp/deploy.log
      - cat /tmp/deploy.log | grep "Created staging repository with ID" | cut -d\" -f2 | tee /tmp/repositoryId.txt

artifacts:
  discard-paths: yes
  files:
    - /tmp/repositoryId.txt

cache:
  paths:
    - "/root/.m2/**/*"
